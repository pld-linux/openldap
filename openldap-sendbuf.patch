Filed in OpenLDAP ITS (no number assigned yet, it was filed about
ten minutes ago) on 25 January.  Our candidate workaround:
--- openldap-2.0.7/servers/slapd/daemon.c.sendbuf	Mon Oct 30 13:14:51 2000
+++ openldap-2.0.7/servers/slapd/daemon.c	Mon Jan 29 18:05:20 2001
@@ -954,6 +954,42 @@
 #endif
 			}
 #endif
+#ifdef SO_SNDBUF
+		        if ( nbackends > 0 ) {
+				int tmp = 0x10000, rc = 0, sz = 1;
+				BackendDB *be = NULL;
+
+				/* get the current buffer size */
+				rc = getsockopt( s, SOL_SOCKET, SO_SNDBUF,
+						&tmp, &sz );
+				if ( ( rc == AC_SOCKET_ERROR ) || ( tmp < 0x10000 ) ) {
+					tmp = 0x10000;
+				}
+
+				/* get the current size limit */
+				for ( i = 0, sz = 1; i < nbackends; i++ ) {
+					sz = backends[i].be_sizelimit > sz ?
+					     backends[i].be_sizelimit : sz;
+				}
+
+				/* guess how much traffic each entry takes up */
+				sz *= 0x4000;
+
+				do {
+					tmp *= 2;
+					rc = setsockopt( s, SOL_SOCKET,
+							 SO_SNDBUF,
+							 &tmp, sizeof(tmp) );
+				} while ( ( rc == 0 ) && ( tmp <= sz ) );
+
+				if ( rc == AC_SOCKET_ERROR ) {
+					int err = sock_errno();
+					Debug( LDAP_DEBUG_ANY,
+						"slapd(%ld): setsockopt(SO_SNDBUF = %d)\n",
+						(long) s, tmp / 2, 0);
+				}
+			}
+#endif
 
 			Debug( LDAP_DEBUG_CONNS, "daemon: new connection on %ld\n",
 				(long) s, 0, 0 );
