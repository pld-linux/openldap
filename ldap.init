#!/bin/sh
#
# ldap		Startup script for the OpenLDAP server
#
# chkconfig:	345 20 80
#
# description:	OpenLDAP is a Lightweight Directory Access Protocol server
#
# processname:	slapd
# pidfile:	/var/run/slapd/slapd.pid


# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# defaults
SLAPDSYSLOGLEVEL=""
SLAPDURLLIST=""
SLAPDOPTIONS=""

# Get service config
[ -f /etc/sysconfig/ldap ] && . /etc/sysconfig/ldap

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down OpenLDAP
		exit 1
	fi
else
	exit 0
fi

start() {
	if [ ! -f /var/lock/subsys/ldap ]; then
		msg_starting "OpenLDAP"
		ARGS="-u slapd -g slapd"
		if [ -n "$SLAPDSYSLOGLEVEL" ]; then
			ARGS="$ARGS -s $SLAPDSYSLOGLEVEL"
		fi
		if [ -n "$SLAPDOPTIONS" ]; then
			ARGS="$ARGS $SLAPDOPTIONS"
		fi
		# optionally support old option
		if [ -n "$SLAPDNICE" ]; then
			SERVICE_RUN_NICE_LEVEL=$SLAPDNICE
		fi
		daemon /usr/sbin/slapd $ARGS ${SLAPDURLLIST:+ -h "$SLAPDURLLIST"}
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/ldap
		if [ $RETVAL -eq 0 -a -S /var/run/ldapi ]; then
			chown "$LDAPI_SOCKET_OWNER":"$LDAPI_SOCKET_GROUP" /var/run/ldapi && \
			chmod "$LDAPI_SOCKET_MODE" /var/run/ldapi
		fi
	else
		msg_already_running "OpenLDAP"
	fi
}

stop() {
	if [ -f /var/lock/subsys/ldap ]; then
		msg_stopping "OpenLDAP"
		killproc --waitforname slapd --waitfortime 300 slapd -TERM
		rm -f /var/lock/subsys/ldap >/dev/null 2>&1
	else
		msg_not_running "OpenLDAP"
	fi
}

condrestart() {
	if [ -f /var/lock/subsys/ldap ]; then
		stop
		start
	else
		msg_not_running "OpenLDAP"
		RETVAL=$1
	fi
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	stop
	start
	;;
  try-restart)
	condrestart 0
	;;
  force-reload)
	condrestart 7
	;;
  status)
	status slapd
	RETVAL=$?
	;;
  *)
	msg_usage "$0 {start|stop|restart|try-restart|force-reload|status}"
	exit 3
esac

exit $RETVAL
